use warnings;
use strict;
use Test2::V0 '!meta';

use OmniDisco::Prometheus;
use Test::LWP::UserAgent;

#my $p = OD::Prometheus::Query->new(host=>'prometheus.noc.ntua.gr');


#print $p->get(query_range=>[query=>'node_memory_active_bytes',start => time-3600, end => time, step=>30])->to_string;

#print $p->get(query=>'node_memory_active_bytes')->to_string;

my $r0 = '{"status":"success","data":{"resultType":"matrix","result":[{"metric":{"__name__":"node_memory_active_bytes","host":"example.example","instance":"example.example","job":"servers"},"values":[[1551876687,"3563520"],[1551876717,"3563520"],[1551876747,"3563520"],[1551876777,"3563520"],[1551876807,"3563520"],[1551876837,"3563520"],[1551876867,"3563520"],[1551876897,"3563520"],[1551876927,"3567616"],[1551876957,"3567616"],[1551876987,"3567616"],[1551877017,"3567616"],[1551877047,"3567616"],[1551877077,"3567616"],[1551877107,"3567616"],[1551877137,"3567616"],[1551877167,"3551232"],[1551877197,"3551232"],[1551877227,"3567616"],[1551877257,"3567616"],[1551877287,"3567616"],[1551877317,"3567616"],[1551877347,"3567616"],[1551877377,"3567616"],[1551877407,"3567616"],[1551877437,"3567616"],[1551877467,"3567616"],[1551877497,"3567616"],[1551877527,"3563520"],[1551877557,"3563520"],[1551877587,"3563520"],[1551877617,"3563520"],[1551877647,"3563520"],[1551877677,"3563520"],[1551877707,"3563520"],[1551877737,"3563520"],[1551877767,"3563520"],[1551877797,"3563520"],[1551877827,"3563520"],[1551877857,"3563520"],[1551877887,"3563520"],[1551877917,"3563520"],[1551877947,"3563520"],[1551877977,"3563520"],[1551878007,"3563520"],[1551878037,"3563520"],[1551878067,"3563520"],[1551878097,"3563520"],[1551878127,"3563520"],[1551878157,"3563520"],[1551878187,"3563520"],[1551878217,"3563520"],[1551878247,"3563520"],[1551878277,"3563520"],[1551878307,"3563520"],[1551878337,"3563520"],[1551878367,"3563520"],[1551878397,"3563520"],[1551878427,"3563520"],[1551878457,"3563520"],[1551878487,"3563520"],[1551878517,"3563520"],[1551878547,"3563520"],[1551878577,"3563520"],[1551878607,"3563520"],[1551878637,"3563520"],[1551878667,"3563520"],[1551878697,"3563520"],[1551878727,"3563520"],[1551878757,"3563520"],[1551878787,"3563520"],[1551878817,"3563520"],[1551878847,"3563520"],[1551878877,"3563520"],[1551878907,"3563520"],[1551878937,"3563520"],[1551878967,"3563520"],[1551878997,"3563520"],[1551879027,"3563520"],[1551879057,"3563520"],[1551879087,"3563520"],[1551879117,"3563520"]]}]}}';

my $useragent = Test::LWP::UserAgent->new;
$useragent->map_response( qr{example.com:9090/api/v1/query\?query=}, HTTP::Response->new('200', 'OK', ['Content-Type' => 'application/json'], $r0 ));

my $p2 = OD::Prometheus::Query->new(host=>'example.com',ua=>$useragent);
isa_ok( $p2, 'OD::Prometheus::Query' );
my $s = $p2->get(query=>'node_memory_active_bytes');

is( $s->size, 82, 'Size of returned set is correct' );


done_testing;
